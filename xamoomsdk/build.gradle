apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

def versionString = "3.12.0"

def props = new Properties()
file(project.gradle.gradleUserHomeDir.path + "/gradle.properties").withInputStream { props.load(it) }

version = versionString
group = "com.xamoom.android"

android {
	compileSdkVersion 30
	buildToolsVersion '30.0.2'

	defaultConfig {
		minSdkVersion 28
		targetSdkVersion 30
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
		multiDexEnabled true
		vectorDrawables.useSupportLibrary = true
	}

	buildTypes {
		debug {
			manifestPlaceholders = [xamoomSDKVersion:versionString]
			multiDexEnabled true
		}
		release {
			manifestPlaceholders = [xamoomSDKVersion:versionString]

			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	testOptions {
		unitTests.returnDefaultValues = true
	}

	lintOptions {
		abortOnError false
	}
	compileOptions {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
	}
}

dependencies {
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	testImplementation 'junit:junit:4.13.1'
	implementation 'androidx.multidex:multidex:2.0.1'
	testImplementation 'org.mockito:mockito-core:1.10.10'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'
	testImplementation 'org.robolectric:robolectric:3.1.4'
	testImplementation 'org.robolectric:shadows-support-v4:3.1.4'
	testImplementation 'org.robolectric:shadows-maps:3.0'
	testImplementation 'org.robolectric:shadows-play-services:3.0'
	androidTestImplementation 'androidx.test.ext:junit:1.1.3'
	androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'
	implementation files('libs/androidsvg-1.2.1.jar')
	implementation files('libs/YouTubeAndroidPlayerApi.jar')
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
	implementation 'androidx.core:core:1.6.0'
	implementation 'androidx.legacy:legacy-support-v13:1.0.0'
	implementation 'androidx.recyclerview:recyclerview:1.2.1'
	implementation 'androidx.appcompat:appcompat:1.3.1'
	implementation 'com.google.android.material:material:1.4.0'
	implementation 'com.google.android.gms:play-services-maps:17.0.1'
	implementation 'com.google.android.exoplayer:exoplayer-core:2.6.1'
	implementation 'com.squareup.retrofit2:retrofit:2.7.1'
	implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
	implementation 'com.xamoom.android:morpheus:0.5.2'
	implementation 'com.github.bumptech.glide:glide:3.7.0'
	implementation 'com.google.android.gms:play-services-gcm:17.0.0'
	implementation 'com.google.android.gms:play-services-location:18.0.0'
	implementation 'com.xamoom.android:htmltextview:1.0.9'
	implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
	implementation 'com.google.firebase:firebase-core:19.0.2'
	implementation 'com.google.firebase:firebase-messaging:22.0.0'
	implementation 'com.google.dagger:dagger:2.35.1'
	implementation 'com.google.dagger:dagger-android:2.35.1'
	implementation 'com.google.dagger:dagger-android-support:2.35.1'
	kapt 'com.google.dagger:dagger-compiler:2.35.1'
	kapt 'com.google.dagger:dagger-android-processor:2.35.1'
	implementation 'org.altbeacon:android-beacon-library:2.19.2'
	implementation 'com.mapbox.mapboxsdk:mapbox-android-sdk:9.6.2'
	implementation 'com.jakewharton.timber:timber:4.7.1'
	implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

	// Coroutine Core dependency
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'
	// Android UI Programming
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'
}

ext {
	bintrayRepo = 'maven'
	bintrayName = 'xamoomsdk'
	publishedGroupId = 'com.xamoom.android'
	libraryName = 'xamoomsdk'
	artifact = 'xamoomsdk'

	libraryDescription = 'xamoomsdk is a framework for the xamoom-cloud api. So you can write your own applications for the xamoom-cloud.'

	siteUrl = 'https://github.com/xamoom/xamoom-android-sdk'
	gitUrl = 'https://github.com/xamoom/xamoom-android-sdk.git'

	libraryVersion = versionString
	developerId = 'xamoom-raphael'
	developerName = 'Raphael Seher'
	developerEmail = 'raphael@xamoom.com'

	licenseName = 'The Apache Software License, Version 2.0'
	licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
	allLicenses = ["Apache-2.0"]
}
repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
	maven { url 'https://api.mapbox.com/downloads/v2/releases/maven'
		authentication {
			basic(BasicAuthentication)
		}
		credentials {
			username = 'mapbox'
			password = props.getProperty("MAPBOX_DOWNLOADS_TOKEN") ?: ""
		}
	}
}

//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
